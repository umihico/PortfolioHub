custom:
  profile: umihico # aws account configured in ~/.aws/credentials
  service: portfoliohub # project name
  certificateName: umihi.co # certificated domain in AWS Certificate Manager
  domainName-prod: portfoliohub.umihi.co # domain name
  domainName-stg: stg-${self:custom.domainName-prod}
  pythonRequirements:
    dockerizePip: true
  customDomain:
    domainName: ${self:custom.domainName-${opt:stage, self:provider.stage}}
    basePath: ''
    stage: ${opt:stage, self:provider.stage}
    certificateName: ${self:custom.certificateName}
    createRoute53Record: true
  scheduleInterval:
    prod: 10
    stg: 1440

service:
  name: ${self:custom.service}

provider:
  name: aws
  region: ap-northeast-1
  runtime: python3.7
  stage: stg
  profile: ${self:custom.profile}
  environment: ${file(./${opt:stage, self:provider.stage}.yml)}
  apiGateway:
    binaryMediaTypes:
      - '*/*'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:getObject"
        - "s3:putObject"
      Resource: "arn:aws:s3:::*/*"

plugins:
  - ./vendor/bref/bref
  - serverless-domain-manager
  - serverless-python-requirements

functions:
  laravel:
    handler: public/index.php
    runtime: provided
    timeout: 28
    layers:
      - ${bref:layer.php-73-fpm}
    events:
      - http: 'ANY /'
      - http: 'ANY /{proxy+}'
  scraping:
    handler: main.main
    timeout: 120
    memorySize: 512
    runtime: python3.7
    layers:
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:pyyaml:1
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:requests:2
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:selenium:7
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:mysql-connector-python:1
    events:
      - schedule: rate(${self:custom.scheduleInterval.${opt:stage, self:provider.stage}} minutes)

package:
  exclude:
    - node_modules/**
    - .git/**
