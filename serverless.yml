custom:
  profile: portfoliohub # aws account configured in ~/.aws/credentials
  service: portfoliohub # project name
  pythonRequirements:
    dockerizePip: true
  scheduleInterval:
    prod: 5
    stg: 1440

service:
  name: ${self:custom.service}

provider:
  name: aws
  region: ap-northeast-1
  runtime: python3.7
  stage: stg
  profile: ${self:custom.profile}
  environment: ${file(./${opt:stage, self:provider.stage}.yml)}
  apiGateway:
    binaryMediaTypes:
      - "*/*"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:getObject"
        - "s3:putObject"
      Resource: "arn:aws:s3:::*/*"
  ecr:
    images:
      latest:
        path: ./

plugins:
  - serverless-python-requirements

functions:
  web:
    timeout: 28
    image:
      name: latest
    events:
      - httpApi: "*"
  scraping:
    handler: main.main
    timeout: 120
    memorySize: 512
    runtime: python3.7
    layers:
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:pyyaml:1
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:requests:2
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:selenium:7
      - arn:aws:lambda:ap-northeast-1:${env:AWS_ACCOUNT_ID}:layer:mysql-connector-python:1
    events:
      - schedule: rate(${self:custom.scheduleInterval.${opt:stage, self:provider.stage}} minutes)

package:
  exclude:
    - node_modules/**
    - terraform/**
    - .git/**
